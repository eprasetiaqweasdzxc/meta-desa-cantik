{
    "description": "validation",
    "dataKey": "meta-val",
    "version": "0.0.1",
    "testFunctions": [
        {
            "dataKey": "jml_art",
            "componentValidation": ["jml_art"],
            "validations": [
                {
                    "test": "let value = getValue('jml_art'); value && value.trim().length === 0",
                    "message": "Jumlah Anggota Rumah Tangga Minimal 1",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "almt",
            "componentValidation": ["almt"],
            "validations": [
                {
                    "test": "let value = getValue('almt'); value && value.trim().length === 0",
                    "message": "Isi dengan lengkap",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "nkk",
            "componentValidation": ["nkk"],
            "validations": [
                {
                    "test": "let value = getValue('nkk'); value && !/^[a-zA-Z\\s]*$/.test(value)",
                    "message": "Hanya boleh diisi dengan huruf dan spasi",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "nubtt",
            "componentValidation": ["nubtt"],
            "validations": [
                {
                    "test": "let value = getValue('nubtt'); value && !/^\\d+$/.test(value)",
                    "message": "Hanya boleh diisi dengan angka",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "nukhv",
            "componentValidation": ["nukhv"],
            "validations": [
                {
                    "test": "let value = getValue('nukhv'); value && !/^\\d+$/.test(value)",
                    "message": "Hanya boleh diisi dengan angka",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "sk",
            "componentValidation": ["sk"],
            "validations": [
                {
                    "test": "let value = getValue('sk'); value && !/^[a-zA-Z\\s]+$/.test(value)",
                    "message": "Hanya boleh diisi dengan huruf",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jak",
            "componentValidation": ["jak"],
            "validations": [
                {
                    "test": "let value = getValue('jak'); value && !/^\\d+$/.test(value)",
                    "message": "Hanya boleh diisi dengan angka",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ilw",
            "componentValidation": ["ilw"],
            "validations": [
                {
                    "test": "let value = getValue('ilw'); value && !/^[a-zA-Z0-9]+$/.test(value)",
                    "message": "Hanya boleh diisi dengan huruf dan angka, tidak boleh ada simbol atau spasi",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "nokk",
            "componentValidation": ["nokk"],
            "validations": [
                {
                    "test": "let value = getValue('nokk'); value && String(value).length !== 16",
                    "message": "Nomor Kartu Keluarga harus terdiri dari 16 karakter",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kkk",
            "componentValidation": ["kkk"],
            "validations": [
                {
                    "test": "let value = getValue('kkk'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "hasil_kunjungan",
            "componentValidation": ["hasil_kunjungan"],
            "validations": [
                {
                    "test": "let value = getValue('hasil_kunjungan'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pcl",
            "componentValidation": ["pcl"],
            "validations": [
                {
                    "test": "let value = getValue('pcl'); value && !/^[a-zA-Z\\s]+$/.test(value)",
                    "message": "Hanya boleh diisi dengan huruf",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "nama_art",
            "componentValidation": ["nama_art@$ROW$"],
            "validations": [
                {
                    "test": "let nama_art = getValue('nama_art#'+getRowIndex(0))\n String(nama_art).length<3",
                    "message": "Nama ART minimal 2 karakter",
                    "type": 2
                },
                {
                    "test": "let nama_art = getValue('nama_art#'+getRowIndex(0))\n !/^[a-zA-Z\\s]+$/.test(String(nama_art))",
                    "message": "Nama ART tidak boleh mengandung selain huruf dan spasi",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "umur",
            "componentValidation": ["umur", "r38a", "r38b"],
            "validations": [
                {
                    "test": "getValue('umur#'+getRowIndex(0)) < 1",
                    "message": "Umur tidak boleh di bawah 1 Tahun",
                    "type": 2
                },
                {
                    "test": "let a = getValue('r38a#'+getRowIndex(0))\n let b = getValue('r38b#'+getRowIndex(0))\n getValue('umur#'+getRowIndex(0)) >=  50 && ( a ==1 || b == 1 )",
                    "message": "r38a atau r38b = 1 tapi umur >= 50",
                    "type": 1
                }
            ]
        },
        {
            "dataKey": "nuak",
            "componentValidation": ["nuak"],
            "validations": [
                {
                    "test": "/^\\d+$/.test(getValue('nuak'))",
                    "message": "Hanya boleh diisi dengan angka",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "nik",
            "componentValidation": ["nik@$ROW$"],
            "validations": [
                {
                    "test": "String(getValue('nik#'+getRowIndex(0))).length !== 16",
                    "message": "Nomor Induk Kependudukan harus terdiri dari 16 karakter",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kak",
            "componentValidation": ["kak@$ROW$"],
            "validations": [
                {
                    "test": "getValue('kak#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jk",
            "componentValidation": ["jk@$ROW$"],
            "validations": [
                {
                    "test": "getValue('jk#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "tl",
            "componentValidation": ["tl"],
            "validations": [
                {
                    "test": "getValue('tl#'+getRowIndex(0)) < 1",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "sp",
            "componentValidation": ["sp@$ROW$"],
            "validations": [
                {
                    "test": "getValue('sp#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "shdkk",
            "componentValidation": ["shdkk@$ROW$"],
            "validations": [
                {
                    "test": "getValue('shdkk#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jmwbtdp",
            "componentValidation": ["jmwbtdp@$ROW$"],
            "validations": [
                {
                    "test": "getValue('jmwbtdp#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkk",
            "componentValidation": ["amkk@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkk#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ps",
            "componentValidation": ["ps@$ROW$"],
            "validations": [
                {
                    "test": "getValue('ps#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jjptypsd",
            "componentValidation": ["jjptypsd@$ROW$"],
            "validations": [
                {
                    "test": "getValue('jjptypsd#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ktypsd",
            "componentValidation": ["ktypsd"],
            "validations": [
                {
                    "test": "getValue('ktypsd#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "istyd",
            "componentValidation": ["istyd"],
            "validations": [
                {
                    "test": "getValue('ktypsd#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "abmbssyl",
            "componentValidation": ["abmbssyl@$ROW$"],
            "validations": [
                {
                    "test": "getValue('abmbssyl#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "bjb",
            "componentValidation": ["bjb@$ROW$"],
            "validations": [
                {
                    "test": "let value = getValue('bjb#' + getRowIndex(0)); !/^[0-9]+$/.test(value)",
                    "message": "Hanya boleh diisi dengan angka",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "lpdpu",
            "componentValidation": ["lpdpu@$ROW$"],
            "validations": [
                {
                    "test": "getValue('lpdpu#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "sqpu",
            "componentValidation": ["sqpu@$ROW$"],
            "validations": [
                {
                    "test": "getValue('sqpu#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amnpwp",
            "componentValidation": ["amnpwp@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amnpwp#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amusb",
            "componentValidation": ["amusb@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amusb#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "bjusbym",
            "componentValidation": ["bjusbym@$ROW$"],
            "validations": [
                {
                    "test": "let value = getValue('bjusbym#' + getRowIndex(0)); value && !/^[0-9]+$/.test(value)",
                    "message": "Hanya boleh diisi dengan angka, tidak boleh ada huruf, spasi, atau simbol",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "aluduut",
            "componentValidation": ["aluduut@$ROW$"],
            "validations": [
                {
                    "test": "getValue('aluduut#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jpydpuu",
            "componentValidation": ["jpydpuu"],
            "validations": [
                {
                    "test": "getValue('jpydpuu#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jpytdpuu",
            "componentValidation": ["jpytdpuu@$ROW$"],
            "validations": [
                {
                    "test": "getValue('jpytdpuu#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kpuu",
            "componentValidation": ["kpuu@$ROW$"],
            "validations": [
                {
                    "test": "getValue('kpuu#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ouupr",
            "componentValidation": ["ouupr@$ROW$"],
            "validations": [
                {
                    "test": "getValue('ouupr#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pidkuu",
            "componentValidation": ["pidkuu@$ROW$"],
            "validations": [
                {
                    "test": "getValue('pidkuu#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "puubkg",
            "componentValidation": ["puubkg@$ROW$"],
            "validations": [
                {
                    "test": "getValue('puubkg#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkgpmmabm",
            "componentValidation": ["amkgpmmabm@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkgpmmabm#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkgpmmabd",
            "componentValidation": ["amkgpmmabd@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkgpmmabd#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkgbana",
            "componentValidation": ["amkgbana@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkgbana#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkmmtj",
            "componentValidation": ["amkmmtj@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkmmtj#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ddpys",
            "componentValidation": ["ddpys@$ROW$"],
            "validations": [
                {
                    "test": "getValue('ddpys#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ddpysam",
            "componentValidation": ["ddpysam@$ROW$"],
            "validations": [
                {
                    "test": "getValue('ddpysam#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ammkgbb",
            "componentValidation": ["ammkgbb@$ROW$"],
            "validations": [
                {
                    "test": "getValue('ammkgbb#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkgumds",
            "componentValidation": ["amkgumds@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkgumds#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkgmb",
            "componentValidation": ["amkgmb@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkgmb#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ssmgkd",
            "componentValidation": ["ssmgkd@$ROW$"],
            "validations": [
                {
                    "test": "getValue('ssmgkd#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jbtkaapsi",
            "componentValidation": ["jbtkaapsi@$ROW$"],
            "validations": [
                {
                    "test": "getValue('jbtkaapsi#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amkkkm",
            "componentValidation": ["amkkkm@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amkkkm#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "dstt",
            "componentValidation": ["dstt@$ROW$"],
            "validations": [
                {
                    "test": "getValue('dstt#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "dsttaisdppp",
            "componentValidation": ["dsttaisdppp@$ROW$"],
            "validations": [
                {
                    "test": "getValue('dsttaisdppp#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "aisdpkur",
            "componentValidation": ["aisdpkur@$ROW$"],
            "validations": [
                {
                    "test": "getValue('aisdpkur#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "anisdppum",
            "componentValidation": ["anisdppum@$ROW$"],
            "validations": [
                {
                    "test": "getValue('anisdppum#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "aisdpip",
            "componentValidation": ["aisdpip@$ROW$"],
            "validations": [
                {
                    "test": "getValue('aisdpip#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "amjk",
            "componentValidation": ["amjk@$ROW$"],
            "validations": [
                {
                    "test": "getValue('amjk#'+getRowIndex(0)) < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "skbttyt",
            "componentValidation": ["skbttyt"],
            "validations": [
                {
                    "test": "let value = getValue('skbttyt'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jpsmn",
            "componentValidation": ["jpsmn"],
            "validations": [
                {
                    "test": "let value = getValue('jpsmn'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "llbtt",
            "componentValidation": ["llbtt"],
            "validations": [
                {
                    "test": "let value = getValue('llbtt'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jll",
            "componentValidation": ["jll"],
            "validations": [
                {
                    "test": "let value = getValue('jll'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jdt",
            "componentValidation": ["jdt"],
            "validations": [
                {
                    "test": "let value = getValue('jdt'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jat",
            "componentValidation": ["jat"],
            "validations": [
                {
                    "test": "let value = getValue('jat'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "samu",
            "componentValidation": ["samu"],
            "validations": [
                {
                    "test": "let value = getValue('samu'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "sjjsam",
            "componentValidation": ["sjjsam"],
            "validations": [
                {
                    "test": "let value = getValue('sjjsam'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "spu",
            "componentValidation": ["spu"],
            "validations": [
                {
                    "test": "let value = getValue('spu'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "dytdri",
            "componentValidation": ["dytdri"],
            "validations": [
                {
                    "test": "let value = getValue('dytdri'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "bbeuum",
            "componentValidation": ["bbeuum"],
            "validations": [
                {
                    "test": "let value = getValue('bbeuum'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kdpftbab",
            "componentValidation": ["kdpftbab"],
            "validations": [
                {
                    "test": "let value = getValue('kdpftbab'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jpsjk",
            "componentValidation": ["jpsjk"],
            "validations": [
                {
                    "test": "let value = getValue('jpsjk'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "tpat",
            "componentValidation": ["tpat"],
            "validations": [
                {
                    "test": "let value = getValue('tpat'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "akmpb",
            "componentValidation": ["akmpb"],
            "validations": [
                {
                    "test": "let value = getValue('akmpb'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pbssb",
            "componentValidation": ["pbssb"],
            "validations": [
                {
                    "test": "let value = getValue('pbssb'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pkh",
            "componentValidation": ["pkh"],
            "validations": [
                {
                    "test": "let value = getValue('pkh'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pbltd",
            "componentValidation": ["pbltd"],
            "validations": [
                {
                    "test": "let value = getValue('pbltd'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "psl",
            "componentValidation": ["psl"],
            "validations": [
                {
                    "test": "let value = getValue('psl'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pbpd",
            "componentValidation": ["pbpd"],
            "validations": [
                {
                    "test": "let value = getValue('pbpd'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pbsp",
            "componentValidation": ["pbsp"],
            "validations": [
                {
                    "test": "let value = getValue('pbsp'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pslpg",
            "componentValidation": ["pslpg"],
            "validations": [
                {
                    "test": "let value = getValue('pslpg'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kmassb",
            "componentValidation": ["kmassb"],
            "validations": [
                {
                    "test": "let value = getValue('kmassb'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "tgkal",
            "componentValidation": ["tgkal"],
            "validations": [
                {
                    "test": "let value = getValue('tgkal'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "lk",
            "componentValidation": ["lk"],
            "validations": [
                {
                    "test": "let value = getValue('lk'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ac",
            "componentValidation": ["ac"],
            "validations": [
                {
                    "test": "let value = getValue('ac'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "pa",
            "componentValidation": ["pa"],
            "validations": [
                {
                    "test": "let value = getValue('pa'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "tp",
            "componentValidation": ["tp"],
            "validations": [
                {
                    "test": "let value = getValue('tp'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "tld",
            "componentValidation": ["tld"],
            "validations": [
                {
                    "test": "let value = getValue('tld'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "ep",
            "componentValidation": ["ep"],
            "validations": [
                {
                    "test": "let value = getValue('ep'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "klt",
            "componentValidation": ["klt"],
            "validations": [
                {
                    "test": "let value = getValue('klt'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "sm",
            "componentValidation": ["sm"],
            "validations": [
                {
                    "test": "let value = getValue('sm'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "sepeda",
            "componentValidation": ["sepeda"],
            "validations": [
                {
                    "test": "let value = getValue('sepeda'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "m",
            "componentValidation": ["m"],
            "validations": [
                {
                    "test": "let value = getValue('m'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "p",
            "componentValidation": ["p"],
            "validations": [
                {
                    "test": "let value = getValue('p'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kpm",
            "componentValidation": ["kpm"],
            "validations": [
                {
                    "test": "let value = getValue('kpm'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "smp",
            "componentValidation": ["smp"],
            "validations": [
                {
                    "test": "let value = getValue('sm'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kmatbs",
            "componentValidation": ["kmatbs"],
            "validations": [
                {
                    "test": "let value = getValue('kmatbs'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "lsyt",
            "componentValidation": ["lsyt"],
            "validations": [
                {
                    "test": "let value = getValue('lsyt'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "rb",
            "componentValidation": ["rb"],
            "validations": [
                {
                    "test": "let value = getValue('rb'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jtym",
            "componentValidation": ["jtym"],
            "validations": [
                {
                    "test": "let value = getValue('jtym'); value && value.trim().length === 0",
                    "message": "Hewan Ternak (ekor) ",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "jaiuy",
            "componentValidation": ["jaiuy"],
            "validations": [
                {
                    "test": "let value = getValue('jaiuy'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "akimradp",
            "componentValidation": ["akimradp"],
            "validations": [
                {
                    "test": "let value = getValue('akimradp'); value === '' || value === null ? false : value < 1",
                    "message": "Pilih salah satu",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r6a",
            "componentValidation": [
                "r45a",
                "r10a",
                "r10b",
                "r10c",
                "r11",
                "r6a"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r6a#'+getRowIndex(0))\n a < 1 || a > 12",
                    "message": "Isian hanya boleh 1 s.d 12",
                    "type": 2
                },
                {
                    "test": "let a = getValue('r45a#'+getRowIndex(0))\n let b = getValue('r10a#'+getRowIndex(0)) \n let c = getValue('r10b#'+getRowIndex(0)) \n let d = getValue('r10c#'+getRowIndex(0)) \n let e = getValue('r11#'+getRowIndex(0)) \n let f = getValue('r6a#'+getRowIndex(0)) \n f == 1 && a != 2 && ( b == 1 || c == 1 || d == 1 || e == 1 )",
                    "message": "r10a/r10b/r10c/r11 kode 1, r6a = 1, tapi r45a tidak sama dengan 2",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r8a",
            "componentValidation": ["r8a@$ROW$"],
            "validations": [
                {
                    "test": "let a = getValue('r8a#'+getRowIndex(0))\n a < 1 || a > 4",
                    "message": "Isian hanya boleh 1 s.d 4",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r8b",
            "componentValidation": ["r8b@$ROW$"],
            "validations": [
                {
                    "test": "let a = getValue('r8b#'+getRowIndex(0))\n a < 5 || a > 8",
                    "message": "Isian hanya boleh 5 s.d 8",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r8c",
            "componentValidation": ["r8c@$ROW$"],
            "validations": [
                {
                    "test": "let a = getValue('r8c#'+getRowIndex(0))\n a < 1 || a > 4",
                    "message": "Isian hanya boleh 1 s.d 4",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r8d",
            "componentValidation": ["r8d@$ROW$"],
            "validations": [
                {
                    "test": "let a = getValue('r8d#'+getRowIndex(0))\n a < 5 || a > 8",
                    "message": "Isian hanya boleh 5 s.d 8",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r8e",
            "componentValidation": ["r8e@$ROW$"],
            "validations": [
                {
                    "test": "let a = getValue('r8e#'+getRowIndex(0))\n a < 1 || a > 4",
                    "message": "Isian hanya boleh 1 s.d 4",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r8f",
            "componentValidation": ["r8f@$ROW$"],
            "validations": [
                {
                    "test": "let a = getValue('r8f#'+getRowIndex(0))\n a < 5 || a > 8",
                    "message": "Isian hanya boleh 5 s.d 8",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r10a",
            "componentValidation": [
                "konfirmasir11",
                "r10a",
                "r8a",
                "r8b",
                "r8c",
                "r8d",
                "r8e",
                "r8f",
                "r45a",
                "r6a"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r10a#'+getRowIndex(0))\n a < 1 || a > 2",
                    "message": "Isian hanya boleh 1 atau 2",
                    "type": 2
                },
                {
                    "test": "let k = getValue('konfirmasir11#'+getRowIndex(0)) \n let a = getValue('r10a#'+getRowIndex(0))\n let b = getValue('r8a#'+getRowIndex(0)) \n let c = getValue('r8b#'+getRowIndex(0)) \n let d = getValue('r8c#'+getRowIndex(0))\n let e = getValue('r8d#'+getRowIndex(0)) \n let f = getValue('r8e#'+getRowIndex(0)) \n let g = getValue('r8f#'+getRowIndex(0)) \n k.length < 10 && a == 1 && ( b == 1 || c == 5 || d == 1 || e==5 || f==1 || g==5 )",
                    "message": "Konfirmasi jika r10a kode 1 tapi r8a/r8c/r8e ada yang kode 1 atau r8b/r8d/r8f ada yang kode 5",
                    "type": 1
                },
                {
                    "test": "let a = getValue('r45a#'+getRowIndex(0))\n let b = getValue('r10a#'+getRowIndex(0)) \n let f = getValue('r6a#'+getRowIndex(0)) \n f == 1 && a != 2 && b == 1",
                    "message": "r10a kode 1, r6a = 1, tapi r45a tidak sama dengan 2",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r10b",
            "componentValidation": [
                "konfirmasir11",
                "r10b",
                "r8a",
                "r8b",
                "r8c",
                "r8d",
                "r8e",
                "r8f",
                "r45a",
                "r6a"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r10b#'+getRowIndex(0))\n a < 1 || a > 2",
                    "message": "Isian hanya boleh 1 atau 2",
                    "type": 2
                },
                {
                    "test": "let k = getValue('konfirmasir11#'+getRowIndex(0)) \n let a = getValue('r10b#'+getRowIndex(0))\n let b = getValue('r8a#'+getRowIndex(0)) \n let c = getValue('r8b#'+getRowIndex(0)) \n let d = getValue('r8c#'+getRowIndex(0))\n let e = getValue('r8d#'+getRowIndex(0)) \n let f = getValue('r8e#'+getRowIndex(0)) \n let g = getValue('r8f#'+getRowIndex(0)) \n k.length < 10 && a == 1 && ( b == 1 || c == 5 || d == 1 || e==5 || f==1 || g==5 )",
                    "message": "Konfirmasi jika r10b kode 1 tapi r8a/r8c/r8e ada yang kode 1 atau r8b/r8d/r8f ada yang kode 5",
                    "type": 1
                },
                {
                    "test": "let a = getValue('r45a#'+getRowIndex(0))\n let b = getValue('r10b#'+getRowIndex(0)) \n let f = getValue('r6a#'+getRowIndex(0)) \n f == 1 && a != 2 && b == 1",
                    "message": "r10b kode 1, r6a = 1, tapi r45a tidak sama dengan 2",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r10c",
            "componentValidation": [
                "konfirmasir11",
                "r10c",
                "r8a",
                "r8b",
                "r8c",
                "r8d",
                "r8e",
                "r8f",
                "r45a",
                "r6a"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r10c#'+getRowIndex(0))\n a < 1 || a > 2",
                    "message": "Isian hanya boleh 1 atau 2",
                    "type": 2
                },
                {
                    "test": "let k = getValue('konfirmasir11#'+getRowIndex(0)) \n let a = getValue('r10c#'+getRowIndex(0))\n let b = getValue('r8a#'+getRowIndex(0)) \n let c = getValue('r8b#'+getRowIndex(0)) \n let d = getValue('r8c#'+getRowIndex(0))\n let e = getValue('r8d#'+getRowIndex(0)) \n let f = getValue('r8e#'+getRowIndex(0)) \n let g = getValue('r8f#'+getRowIndex(0)) \n k.length < 10 && a == 1 && ( b == 1 || c == 5 || d == 1 || e==5 || f==1 || g==5 )",
                    "message": "Konfirmasi jika r10c kode 1 tapi r8a/r8c/r8e ada yang kode 1 atau r8b/r8d/r8f ada yang kode 5",
                    "type": 1
                },
                {
                    "test": "let a = getValue('r45a#'+getRowIndex(0))\n let b = getValue('r10c#'+getRowIndex(0)) \n let f = getValue('r6a#'+getRowIndex(0)) \n f == 1 && a != 2 && b == 1",
                    "message": "r10c kode 1, r6a = 1, tapi r45a tidak sama dengan 2",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r11",
            "componentValidation": [
                "konfirmasir11",
                "r11",
                "r8a",
                "r8b",
                "r8c",
                "r8d",
                "r8e",
                "r8f",
                "r45a",
                "r6a"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r11#'+getRowIndex(0))\n a < 1 || a > 2",
                    "message": "Isian hanya boleh 1 atau 2",
                    "type": 2
                },
                {
                    "test": "let k = getValue('konfirmasir11#'+getRowIndex(0)) \n let a = getValue('r11#'+getRowIndex(0))\n let b = getValue('r8a#'+getRowIndex(0)) \n let c = getValue('r8b#'+getRowIndex(0)) \n let d = getValue('r8c#'+getRowIndex(0))\n let e = getValue('r8d#'+getRowIndex(0)) \n let f = getValue('r8e#'+getRowIndex(0)) \n let g = getValue('r8f#'+getRowIndex(0)) \n k.length < 10 && a == 1 && ( b == 1 || c == 5 || d == 1 || e==5 || f==1 || g==5 )",
                    "message": "Konfirmasi jika r11 kode 1 tapi r8a/r8c/r8e ada yang kode 1 atau r8b/r8d/r8f ada yang kode 5",
                    "type": 1
                },
                {
                    "test": "let a = getValue('r45a#'+getRowIndex(0))\n let b = getValue('r11#'+getRowIndex(0)) \n let f = getValue('r6a#'+getRowIndex(0)) \n f == 1 && a != 2 && b == 1",
                    "message": "r11 kode 1, r6a = 1, tapi r45a tidak sama dengan 2",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "konfirmasir11",
            "componentValidation": [
                "konfirmasir11",
                "r10a",
                "r10b",
                "r10c",
                "r11",
                "r8a",
                "r8b",
                "r8c",
                "r8d",
                "r8e",
                "r8f",
                "r45a",
                "r6a"
            ],
            "validations": [
                {
                    "test": "let k = getValue('konfirmasir11#'+getRowIndex(0)) \n let a = getValue('r10a#'+getRowIndex(0))\n let ab = getValue('r10b#'+getRowIndex(0))\n let ac = getValue('r10c#'+getRowIndex(0))\n let ad = getValue('r11#'+getRowIndex(0))\n let b = getValue('r8a#'+getRowIndex(0)) \n let c = getValue('r8b#'+getRowIndex(0)) \n let d = getValue('r8c#'+getRowIndex(0))\n let e = getValue('r8d#'+getRowIndex(0)) \n let f = getValue('r8e#'+getRowIndex(0)) \n let g = getValue('r8f#'+getRowIndex(0)) \n let arr = [a,ab,ac,ad] \n k.length < 10 && arr.includes(1) && ( b == 1 || c == 5 || d == 1 || e==5 || f==1 || g==5 )",
                    "message": "Konfirmasi jika r10a/r10b/r10c/r11 kode 1 tapi r8a/r8c/r8e ada yang kode 1 atau r8b/r8d/r8f ada yang kode 5",
                    "type": 1
                }
            ]
        },
        {
            "dataKey": "r14a",
            "componentValidation": ["r14a", "kbji"],
            "validations": [
                {
                    "test": "let a = getValue('r14a#'+getRowIndex(0))\n a < 1 || a > 7",
                    "message": "Isian hanya boleh 1 s.d. 7",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = getValue('r14a#'+getRowIndex(0)) \n  String(a).substring(0,2) == '92' && b < 4; ",
                    "message": "KBJI Buruh Pertanian tapi Status Berusaha",
                    "type": 2
                },
                {
                    "test": "let a = String(getValue('kbji#'+getRowIndex(0)))\n let b = getValue('r14a#'+getRowIndex(0)) \n  b < 4 && ['8111','9311'].includes(a); ",
                    "message": "KBJI Pekerja/Buruh Tambang tapi Status Berusaha",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kbli",
            "componentValidation": ["kbli", "kbji", "r13a"],
            "validations": [
                {
                    "test": "let a = getValue('kbli#'+getRowIndex(0)).length\n a < 5",
                    "message": "KBLI harus 5 digit",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = String(getValue('kbli#'+getRowIndex(0))).substring(0,2) \n  String(a).substring(0,2) == '92' && !['01','02','03'].includes(b) ",
                    "message": "KBJI Buruh Pertanian tapi Lapus Non Pertanian",
                    "type": 2
                },
                {
                    "test": "let a = String(getValue('kbji#'+getRowIndex(0)))\n let b = String(getValue('kbli#'+getRowIndex(0))).substring(0,2) \n !['05', '06', '07', '08','09'].includes(b) && ['8111','9311'].includes(a); ",
                    "message": "KBJI Pekerja/Buruh Tambang tapi Lapus Non Pertambangan",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "kbji",
            "componentValidation": ["kbji", "r17a", "r17b", "r14a", "kbli"],
            "validations": [
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0)).length\n a < 4; ",
                    "message": "KBJI harus 4 digit",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = getValue('r17b#'+getRowIndex(0)) \n let c = getValue('r17a#'+getRowIndex(0)) \n String(a).substring(0, 2) == '63' && b < 3 ; ",
                    "message": "KBJI Subsisten tapi tidak digunakan sendiri",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = getValue('r17b#'+getRowIndex(0)) \n let c = getValue('r17a#'+getRowIndex(0)) \n String(a).substring(0, 2) != '63' && b > 2; ",
                    "message": "Digunakan sendiri tetapi KBJI bukan Subsisten",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = getValue('r14a#'+getRowIndex(0)) \n  String(a).substring(0,2) == '92' && b < 4; ",
                    "message": "KBJI Buruh Pertanian tapi Status Berusaha",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = String(getValue('kbli#'+getRowIndex(0))).substring(0,2) \n  String(a).substring(0,2) == '92' && !['01','02','03'].includes(b) ",
                    "message": "KBJI Buruh Pertanian tapi Lapus Non Pertanian",
                    "type": 2
                },
                {
                    "test": "let a = String(getValue('kbji#'+getRowIndex(0)))\n let b = getValue('r14a#'+getRowIndex(0)) \n  b < 4 && ['8111','9311'].includes(a); ",
                    "message": "KBJI Pekerja/Buruh Tambang tapi Status Berusaha",
                    "type": 2
                },
                {
                    "test": "let a = String(getValue('kbji#'+getRowIndex(0)))\n let b = String(getValue('kbli#'+getRowIndex(0))).substring(0,2) \n !['05', '06', '07', '08','09'].includes(b) && ['8111','9311'].includes(a); ",
                    "message": "KBJI Pekerja/Buruh Tambang tapi Lapus Non Pertambangan",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r17a",
            "componentValidation": [
                "r17a",
                "r17b",
                "r10a",
                "r10b",
                "r10c",
                "r11"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r17a#'+getRowIndex(0))\n a < 1 || a > 5",
                    "message": "Isian hanya boleh 1 s.d. 5",
                    "type": 2
                },
                {
                    "test": "let b = String(getValue('r17a#'+getRowIndex(0))) \n let c = String(getValue('r17b#'+getRowIndex(0))) \n let d = getValue('r10a#'+getRowIndex(0)) \n let e = getValue('r10b#'+getRowIndex(0)) \n let f = getValue('r10c#'+getRowIndex(0)) \n let g = getValue('r11#'+getRowIndex(0)) \n !['1', '5'].includes(b) && (d == 1 || e == 1 || f == 1 || g == 1) && ['3','4'].includes(c) ; ",
                    "message": "r17a = 2/3/4, r17b = 3/4, tapi r10a/r10b/r10c/r11 kode 1",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r17b",
            "componentValidation": [
                "kbji",
                "r17a",
                "r17b",
                "r10a",
                "r10b",
                "r10c",
                "r11"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r17b#'+getRowIndex(0))\n a < 1 || a > 4",
                    "message": "Isian hanya boleh 1 s.d. 5",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = getValue('r17b#'+getRowIndex(0)) \n String(a).substring(0, 2) == '63' && b < 3 ; ",
                    "message": "KBJI Subsisten tapi tidak digunakan sendiri",
                    "type": 2
                },
                {
                    "test": "let a = getValue('kbji#'+getRowIndex(0))\n let b = getValue('r17b#'+getRowIndex(0)) \n  String(a).substring(0, 2) != '63' && b > 2 ; ",
                    "message": "Digunakan sendiri tetapi KBJI bukan Subsisten",
                    "type": 2
                },
                {
                    "test": "let b = String(getValue('r17a#'+getRowIndex(0))) \n let c = String(getValue('r17b#'+getRowIndex(0))) \n let d = getValue('r10a#'+getRowIndex(0)) \n let e = getValue('r10b#'+getRowIndex(0)) \n let f = getValue('r10c#'+getRowIndex(0)) \n let g = getValue('r11#'+getRowIndex(0)) \n !['1', '5'].includes(b) && (d == 1 || e == 1 || f == 1 || g == 1) && ['3','4'].includes(c) ; ",
                    "message": "r17a = 2/3/4, r17b = 3/4, tapi r10a/r10b/r10c/r11 kode 1",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r26a",
            "componentValidation": ["r26a", "kbji"],
            "validations": [
                {
                    "test": "let a = getValue('r26a#'+getRowIndex(0))\n a != '' && (a < 1 || a > 5)",
                    "message": "Isian hanya boleh 1 s.d. 5",
                    "type": 2
                },
                {
                    "test": "let a = String(getValue('kbji#'+getRowIndex(0))).substring(0,2)\nlet b = Number(getValue('r26a#'+getRowIndex(0)))\n b > 1 && ['01','02','03'].includes(a) ",
                    "message": "KBJI TNI/Polri tapi tidak PKWTT",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r38a",
            "componentValidation": ["r38a", "umur", "konfirmasir38"],
            "validations": [
                {
                    "test": "let a = getValue('r38a#'+getRowIndex(0))\n a < 1 || a > 2",
                    "message": "Isian hanya boleh 1 atau 2",
                    "type": 2
                },
                {
                    "test": "let a = getValue('r38a#'+getRowIndex(0)) \n let b = getValue('konfirmasir38#'+getRowIndex(0)) \n a == 1 && getValue('umur#'+getRowIndex(0)) >= 50 && b.length < 10",
                    "message": "r38a = 1 tapi umur >= 50",
                    "type": 1
                }
            ]
        },
        {
            "dataKey": "r38b",
            "componentValidation": ["r38b", "umur", "konfirmasir38"],
            "validations": [
                {
                    "test": "let a = getValue('r38b#'+getRowIndex(0))\n a < 1 || a > 2",
                    "message": "Isian hanya boleh 1 atau 2",
                    "type": 2
                },
                {
                    "test": "let a = getValue('r38b#'+getRowIndex(0)) \n let b = getValue('konfirmasir38#'+getRowIndex(0)) \n a == 1 && getValue('umur#'+getRowIndex(0)) >= 50 && b.length < 10",
                    "message": "r38b = 1 tapi umur >= 50",
                    "type": 1
                }
            ]
        },
        {
            "dataKey": "konfirmasir38",
            "componentValidation": ["r38a", "r38b", "konfirmasir38"],
            "validations": [
                {
                    "test": "let a = getValue('r38a#'+getRowIndex(0))\n let b = getValue('konfirmasir38#'+getRowIndex(0)) \n a == 1 && getValue('umur#'+getRowIndex(0)) >=  50 && b.length < 10",
                    "message": "Konfirmasi jika r38a = 1 tapi umur >= 50",
                    "type": 1
                },
                {
                    "test": "let a = getValue('r38b#'+getRowIndex(0))\n let b = getValue('konfirmasir38#'+getRowIndex(0)) \n a == 1 && getValue('umur#'+getRowIndex(0)) >=  50 && b.length < 10",
                    "message": "Konfirmasi jika r38b = 1 tapi umur >= 50",
                    "type": 1
                }
            ]
        },
        {
            "dataKey": "r42a",
            "componentValidation": ["r42a", "konfirmasir42"],
            "validations": [
                {
                    "test": "let a = getValue('r42a#'+getRowIndex(0))\n a < 1 || a > 8",
                    "message": "Isian hanya boleh 1 s.d. 8",
                    "type": 2
                },
                {
                    "test": "let a = getValue('konfirmasir42#'+getRowIndex(0))\n let b = getValue('r42a#'+getRowIndex(0))\n b == 3 && a.length < 10;",
                    "message": "Harus ada konfirmasi jika r42a berkode 3, ketikan hasil konfirmasi minimal 10 huruf",
                    "type": 1
                }
            ]
        },
        {
            "dataKey": "konfirmasir42",
            "componentValidation": ["konfirmasir42", "r42a"],
            "validations": [
                {
                    "test": "let a = getValue('konfirmasir42#'+getRowIndex(0))\n let b = getValue('r42a#'+getRowIndex(0))\n b == 3 && a.length < 10;",
                    "message": "Harus ada konfirmasi jika r42a berkode 3, ketikan hasil konfirmasi minimal 10 huruf",
                    "type": 1
                }
            ]
        },
        {
            "dataKey": "r45a",
            "componentValidation": [
                "r45a",
                "r10a",
                "r10b",
                "r10c",
                "r11",
                "r6a"
            ],
            "validations": [
                {
                    "test": "let a = getValue('r45a#'+getRowIndex(0))\n a < 1 || a > 3",
                    "message": "Isian hanya boleh 1 s.d. 3",
                    "type": 2
                },
                {
                    "test": "let a = getValue('r45a#'+getRowIndex(0))\n let b = getValue('r10a#'+getRowIndex(0)) \n let c = getValue('r10b#'+getRowIndex(0)) \n let d = getValue('r10c#'+getRowIndex(0)) \n let e = getValue('r11#'+getRowIndex(0)) \n let f = getValue('r6a#'+getRowIndex(0)) \n f == 1 && a != 2 && ( b == 1 || c == 1 || d == 1 || e == 1 )",
                    "message": "r10a/r10b/r10c/r11 kode 1, r6a = 1, tapi r45a tidak sama dengan 2",
                    "type": 2
                }
            ]
        },
        {
            "dataKey": "r50d",
            "componentValidation": ["r50d@$ROW$"],
            "validations": [
                {
                    "test": "let a = getValue('r50d#'+getRowIndex(0))\n a < 1 || a > 4",
                    "message": "Isian hanya boleh 1 s.d. 4",
                    "type": 2
                }
            ]
        }
    ]
}
